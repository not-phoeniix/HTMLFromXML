<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HTMLFromXML</name>
    </assembly>
    <members>
        <member name="T:HTMLFromXML.DocContainer">
            <summary>
            Class representation of a class/struct/interface/etc. Holds a bunch of child DocElement's to display on page.
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocContainer.Name">
            <summary>
            Container name
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocContainer.Summary">
            <summary>
            Summary text of container
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocContainer.Elements">
            <summary>
            List of all child DocElements's inside this container
            </summary>
        </member>
        <member name="M:HTMLFromXML.DocContainer.AddElement(HTMLFromXML.DocElement)">
            <summary>
            Adds an element to this container's html structure
            </summary>
            <param name="element">Element to add</param>
        </member>
        <member name="M:HTMLFromXML.DocContainer.ToString">
            <summary>
            HTML representation of this container and all its elements
            </summary>
            <returns>HTML string</returns>
        </member>
        <member name="T:HTMLFromXML.DocElement">
            <summary>
            Class representation of an individual "member" that isn't a class. Can hold things like methods, properties, constructors, etc.
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocElement.Name">
            <summary>
            Name of this element
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocElement.ContainerName">
            <summary>
            Name of containing class/struct/etc that this member is in
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocElement.Summary">
            <summary>
            Member summary
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocElement.Params">
            <summary>
            Dictionary of all parameters. Key == parameter name, value == parameter summary
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocElement.Returns">
            <summary>
            Member returns summary
            </summary>
        </member>
        <member name="P:HTMLFromXML.DocElement.Type">
            <summary>
            Type of element, can be a method, property, constructor, etc
            </summary>
        </member>
        <member name="M:HTMLFromXML.DocElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Creates a new DocElement from the data in the parent XmlNode
            </summary>
            <param name="node">Node to extract data from</param>
        </member>
        <member name="M:HTMLFromXML.DocElement.GetType(System.String,System.String)">
            <summary>
            Determines type of element based on input string (one letter, P/M/T)
            </summary>
            <param name="type">Single letter representation of element's type</param>
            <param name="name">Name following the element type</param>
            <returns>ElementType that corresponds to the inputted type string</returns>
        </member>
        <member name="M:HTMLFromXML.DocElement.ToString">
            <summary>
            HTML representation of this current element
            </summary>
            <returns>String of HTML for this current element</returns>
        </member>
        <member name="M:HTMLFromXML.Program.PrintHelp">
            <summary>
            Prints the help message for running the command
            </summary>
        </member>
        <member name="M:HTMLFromXML.Program.GetProjectName(System.Xml.XmlDocument)">
            <summary>
            Retrieves project name from the "name" element in an XML file
            </summary>
            <param name="doc">XML Document to grab from</param>
            <returns>Name of project</returns>
        </member>
        <member name="M:HTMLFromXML.Program.GenerateContainers(System.Xml.XmlDocument)">
            <summary>
            Generates a list of containers with all HTML-formatted information from inputted Xml doc
            </summary>
            <param name="doc">Xml document to get data from</param>
            <returns>Generated list of containers</returns>
        </member>
        <member name="M:HTMLFromXML.Program.WriteHTML(System.Xml.XmlDocument)">
            <summary>
            Writes converts and writes the inputted XML document to an HTML document
            </summary>
            <param name="doc">Xml document to draw data from</param>
        </member>
    </members>
</doc>
